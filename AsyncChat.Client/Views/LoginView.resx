<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAABCJJREFUeF7t
        3L9vzVEYx/ESLRE/krKKjVUxmOhEiMQiBmEwCf4CHaRTFz8TiQWrCSGNjb/AJJGwEKIjFhEGaX2enneX
        cu793h/nPnyf80qeRNLnnOcH6vYr945VVVVV1b9saWlpveKQYlbxQvFDsdqC4qniiuKoYh3Hq35piVOK
        u4rvil7Zb8iMYpLrqqa0tJ2KB4pFxaB+Kq4p1nN9laMlrVXYn9q/fYsZ1DvFAUpVq2k544ontqmC7G/U
        LCWrFVrKJsVz29CI3FGsoXxsWsRmxSvbyojdp4XYtIjHaR8uLtFGTFrA6bSHxj4r7imOKXYr7FuX/Q2y
        Xx9X2EvWr4qm7B/7XbQTiwafVHyxLTTwQXFeMc7xLOVMkPtJ0cRrxQTH49DQt5fH785eGW3gWGN2RvHI
        LmjgHMdi0MA7FL+WR+/sFkf6pjtupKs6equI86pIw84tj93ZvGLgpdgdCntG1M0JjrSbBrWFdPv+bM9x
        NnJkYHYXd3byjPR206D707wdnSF9aHTn2XR1lj0zav8TVA1pz3o6eU/q0NndqUTWNKntpSEfplmzbpI6
        dHZ3KpE1R2p7acg3adasI6QOne4+nEpkzZPaXhqy2w9fxX4ytbtTiayXpLaXhuz2nyxbSB06uzuVyFog
        tb0YNIu0YiiTs0haezFoFmnFUCaLtPZizizSiqFMFmntxZxZpBVDmSzS2os5s0grhjJZpLUXc2aRVgxl
        skhrL+bMIq0YymSR1l7MmUVaMZTJIu3/Qd9hsQY/9BEWa/BDH2GxBj/0ERZr8EMfYbEGP/QRFmvwQx9h
        sQY/9BEWa/BDH2GxBj/0ERZr8EMfYbEGP/QRFmvwQx9hsQY/9BEWa/BDH2GxBj/0ERZr8EMfYbEGP/QR
        FmvwQx9hsQY/9BEWa/BDH6Nkb2+6rjio2E7YZwnZJ6I0fWvq0LAGP/QxCt8UpxRrKf0H+xo5/Xy+UF8o
        7Yc+SrP3b+2jZFeWy5niKOmHPkq7QLnG7Ew6Whbl/NBHSR8VPb970c4o7CMOiqKcH/ooaYZSPbOz6Ypy
        KOWHPkraS6me6ax96F9RlPJDHyVtpVTP7Gy6ohxK+aGPkvp+056dTVeUQyk/9FHSFKV6prN70hXlUMoP
        fZR0mVI9s7PpinIo5Yc+ShrkZaidLYpyfuijtIuUa0xn6g9iQ2SPFRq/HLVczhRHST/0MQr2MO6kIvsp
        WvY1cix3JCjthz5GyR4526PnlcfR2xTTiquK+jg6Gtbghz7CYg1+6CMs1uCHPsJiDX7oIyzW4Ic+wmIN
        fugjLNbghz7CYg1+6CMs1uCHPsJiDX7oIyzW4Ic+wmINfugjLNbghz7CYg1+6CMs1uCHPsJiDX7oIyzW
        4Ic+wmINfugjLNbghz7CYg1VVVVVVVVVVVUNjY39BpnCB41jHrD9AAAAAElFTkSuQmCC
</value>
  </data>
</root>